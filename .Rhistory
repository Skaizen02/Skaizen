debugSource('~/GitHub/Skaizen/Popularity.R')
df <- df[order(df$id),]
tags$popularity <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
View(tags)
now <- as.integer(Sys.time())
now
df$time[1]
df$popularity <- df$views / (now - df$time)
View(df)
df$views/2
now - df$time[2]
source('~/GitHub/Skaizen/Popularity.R')
df$popularity <- df$views / (now - df$time) * 1000
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 100, 5)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 100, 5)
alarm()
alarm()
alarm()
\a
"\a"
print("\a")
function Alarm() {
library(sound)
setWavPlayer('"C:\\Program Files\\Windows Media Player\\wmplayer.exe" /play /close ')
s <- Sine(440,1)
play(s)
}
install.packages("sound")
function Alarm() {
library(sound)
setWavPlayer('"C:\\Program Files\\Windows Media Player\\wmplayer.exe" /play /close ')
s <- Sine(440,1)
play(s)
}
alarm <- function() {
library(sound)
setWavPlayer('"C:\\Program Files\\Windows Media Player\\wmplayer.exe" /play /close ')
s <- Sine(440,1)
play(s)
}
alarm()
install.packages("beepr")
install.packages("beepr")
library(beepr)
beep()
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 100, 5)
beep()
source('~/GitHub/Skaizen/WebCrawler.R')
View(df)
df$popularity <- df$views / (now - df$time) * 1000
df <- df[order(df$id),]
tags$popularity <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
View(tags)
index <- which(tags$tag == "RETAIL BANKING")
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
tags$total_pop[index] + df$popularity[i]
tags$total_pop
View(tags)
source('~/GitHub/Skaizen/Popularity.R')
now <- as.integer(Sys.time())
df$popularity <- df$views / (now - df$time) * 1000
df <- df[order(df$id),]
tags <- c()
for (i in df$id) {
tags <- unique(c(tags, unlist(strsplit(df$postTags[i], ","))))
}
tags <- data.frame(tag = tags)
df <- df[order(df$id),]
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
tags$avg_pop <- tags$total_pop/tags$occurences
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
df <- df[order(df$id),]
tags$total_pop <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
tags$avg_pop <- tags$total_pop/tags$occurences
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
View(tags)
tags <- tags[order(tags$avg_pop)]
tags$avg_pop
order(tags$avg_pop)
tags <- tags[order(tags$avg_pop)]
tags <- tags[order(tags$avg_pop),]
View(tags)
source('~/GitHub/Skaizen/Popularity.R')
View(tags)
source('~/GitHub/Skaizen/Popularity.R')
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
tags$avg_pop <- tags$total_pop/tags$occurences
View(tags)
source('~/GitHub/Skaizen/Popularity.R')
source('~/GitHub/Skaizen/Popularity.R')
source('~/GitHub/Skaizen/Popularity.R')
source('~/GitHub/Skaizen/Popularity.R')
now <- as.integer(Sys.time())
df$popularity <- round(df$views / (now - df$time) * 1000)
df <- df[order(df$id),]
tags <- c()
for (i in df$id) {
tags <- unique(c(tags, unlist(strsplit(df$postTags[i], ","))))
}
tags <- data.frame(tag = tags)
df <- df[order(df$id),]
tags$total_pop <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
tags$avg_pop <- round(tags$total_pop/tags$occurences)
View(tags)
source('~/GitHub/Skaizen/Popularity.R')
now <- as.integer(Sys.time())
df$popularity <- round(df$views / (now - df$time) * 1000, 2)
df <- df[order(df$id),]
tags <- c()
for (i in df$id) {
tags <- unique(c(tags, unlist(strsplit(df$postTags[i], ","))))
}
tags <- data.frame(tag = tags)
df <- df[order(df$id),]
tags$total_pop <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
tags$avg_pop <- round(tags$total_pop/tags$occurences, 2)
View(tags)
tags <- tags[order(tags$avg_pop,)]
tags <- tags[order(tags$avg_pop),]
View(tags)
table(unlist(strsplit(df$postTags, ",")))
occ <- table(unlist(strsplit(df$postTags, ",")))
occ <- occ[order(occ)]
occ <- data.frame(occ = occ)
View(occ)
source('~/GitHub/Skaizen/Popularity.R')
tags <- tags[order(tags$tag),]
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
tags$avg_pop <- round(tags$total_pop/tags$occurences, 2)
View(tags)
round(df$views[82] / (now - df$time[82]) * 1000, 2)
df <- df[order(df$id),]
df <- df[order(df$id),]
tags$total_pop <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
df <- df[order(df$id),]
tags$total_pop <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
df <- df[order(df$id),]
tags$total_pop <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
df <- df[order(df$id),]
tags$total_pop <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
debugSource('~/GitHub/Skaizen/Popularity.R')
df <- df[order(df$id),]
tags$total_pop <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
df <- df[order(df$id),]
tags$total_pop <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
debugSource('~/GitHub/Skaizen/Popularity.R')
postTag
debugSource('~/GitHub/Skaizen/Popularity.R')
debugSource('~/GitHub/Skaizen/Popularity.R')
which(tags$tag == "RETAIL BANKING")
typeof(which(tags$tag == "RETAIL BANKING"))
typeof(index)
debugSource('~/GitHub/Skaizen/Popularity.R')
source('~/GitHub/Skaizen/Popularity.R')
source('~/GitHub/Skaizen/Popularity.R')
now <- as.integer(Sys.time())
df$popularity <- round(df$views / (now - df$time) * 1000, 2)
df <- df[order(df$id),]
tags <- c()
for (i in df$id) {
tags <- unique(c(tags, unlist(strsplit(df$postTags[i], ","))))
}
tags <- data.frame(tag = tags)
df <- df[order(df$id),]
tags$total_pop <- unlist(list(0))
for (i in df$id) {
for (postTag in unlist(strsplit(df$postTags[i], ","))) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
tags <- tags[order(tags$tag),]
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
tags$avg_pop <- round(tags$total_pop/tags$occurences, 2)
View(tags)
tags <- tags[order(tags$avg_pop,)]
tags <- tags[order(tags$avg_pop),]
View(tags)
View(df)
barplot()
barplot(height = tags$avg_pop, cex.names = par(las = 2))
barplot(height = tags$avg_pop, cex.names = tags$tag)
barplot(height = tags$avg_pop, cex.names = par(las = 2), names.arg = tags$tag)
tags$tag
barplot(height = tags$avg_pop, cex.names = par(las = 2), names.arg = tags$tag)
barplot(height = tags$avg_pop, cex.names = par(las = 2), names.arg = tags$tag, horiz = T)
barplot(height = tags$avg_pop, cex.names = par(las = 2), names.arg = tags$tag, cex.axis = par("cex.axis"))
barplot(height = tags$avg_pop, cex.names = par(las = 2), names.arg = tags$tag, cex.axis = par())
))
barplot(height = tags$avg_pop, cex.names = par(las = 2), names.arg = tags$tag, cex.axis = par())
barplot(height = tags$avg_pop, names.arg = tags$tag)
barplot(height = tags$avg_pop, names.arg = tags$tag, cex.names = par(font = 2))
par(font = 2)
barplot(height = tags$avg_pop, names.arg = tags$tag)
View(df)
data <- tags[order(tags$avg_pop, decreasing = T),]
par(las = 2, mar =c(2.5, 10, 1, 1))
barplot(height = data$avg_pop[15:0], names.arg = data$tag[15:0], cex.names = 0.5, horiz = T)
grid(col = "gray")
View(df)
#Connection to the database
con <- dbConnect(MySQL(), user="skaizen2", password="kzm38gw35f", dbname="webcrawler", host="localhost")
#Overwrite table
dbWriteTable(conn=con, name=tablename, value=df, row.names = FALSE, overwrite = TRUE)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 10)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
View(df)
df <- parser(links, 10)
source('~/GitHub/Skaizen/WebCrawler.R')
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 10)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 10)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 1)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 1)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 1)
df <- parser(links, 1)1,5:10
1:10
c(1:10)
df[1:10]
df[1:10,]
df <- df[1:10,]
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 1)1,5:10
df <- parser(links, 1)
df <- parser(links, 10)
View(df)
df <- parser(links, 10)
length(df$titles)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 10)
df <- parser(links, 200, 10, T)
df <- parser(links, 200, 1, T)
#Connection to the database
con <- dbConnect(MySQL(), user="skaizen2", password="kzm38gw35f", dbname="webcrawler", host="localhost")
#Overwrite table
dbWriteTable(conn=con, name=tablename, value=df, row.names = FALSE, overwrite = TRUE)
source('~/GitHub/Skaizen/Popularity.R')
now <- as.integer(Sys.time())
df$popularity <- round(df$views / (now - df$time) * 1000, 2)
df <- df[order(df$id),]
tags <- c()
for (i in df$id) {
tags <- unique(c(tags, unlist(strsplit(df$postTags[i], ","))))
}
tags <- data.frame(tag = tags)
df <- df[order(df$id),]
tags$total_pop <- unlist(list(0))
for (i in df$id) {
for (postTag in unlist(strsplit(df$postTags[i], ","))) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
tags <- tags[order(tags$tag),]
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
tags$avg_pop <- round(tags$total_pop/tags$occurences, 2)
data <- tags[order(tags$avg_pop, decreasing = T),]
par(las = 2, mar =c(2.5, 10, 1, 1))
barplot(height = data$avg_pop[15:0], names.arg = data$tag[15:0], cex.names = 0.5, horiz = T)
grid(col = "gray")
View(tags)
tags <- tags[order(tags$avg_pop),]
data <- tags[order(tags$occurences, decreasing = T),]
par(las = 2, mar =c(2.5, 10, 1, 1))
barplot(height = data$occurences[15:0], names.arg = data$tag[15:0], cex.names = 0.5, horiz = T)
grid(col = "gray")
tags <- tags[order(tags$occurences),]
View(tags)
tags <- tags[order(tags$occurences, decreasing = T),]
View(tags)
tags <- tags[order(tags$avg_pop, decreasing = T),]
View(tags)
tags$rank <- seq.int(length(tags$tag))
View(tags)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links)
df <- parser(links, 1)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 1)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 1)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 1)
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 1)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 1)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 1)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 1)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 1)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
View(df)
df <- parser(links, 1)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 5)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
View(df)
df <- parser(links, 5)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 5)
df <- parser(links, 2)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
View(df)
df$time[1]
df$time[2]
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 2)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 2)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 2)
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 2)
df <- parser(links, 300, 1, T)
Sys.time()
as.integer(Sys.time())
as.integer(Sys.time())
as.integer(Sys.time())
as.integer(Sys.time())
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 300, 1, T)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 300, 1, T)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 300, 1, T)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 300, 1, T)
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 300, 1, T)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 300, 1, T)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 300, 1, T)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 300, 5, T)
View(df)
df <- df[order(df$linkedin)]
df <- df[order(df$linkedin),]
View(df)
df$url[]
df$url[5]
df$url[1]
df <- df[order(df$id)]
df <- df[order(df$id),]
#Connection to the database
con <- dbConnect(MySQL(), user="skaizen2", password="kzm38gw35f", dbname="webcrawler", host="localhost")
tablename <- "webcrawler"
#Overwrite table
dbWriteTable(conn=con, name=tablename, value=df, row.names = FALSE, overwrite = TRUE)
df <- unlist(df)
#Overwrite table
dbWriteTable(conn=con, name=tablename, value=df, row.names = FALSE, overwrite = TRUE)
#Connection to the database
con <- dbConnect(MySQL(), user="skaizen2", password="kzm38gw35f", dbname="webcrawler", host="localhost")
tablename <- "webcrawler"
#Overwrite table
dbWriteTable(conn=con, name=tablename, value=df, row.names = FALSE, overwrite = TRUE)
df <- data.frame(df)
url <- https://www.finextra.com/newsarticle/32354/six-to-build-digital-asset-trading-settlement-and-custody-service
url <- "https://www.finextra.com/newsarticle/32354/six-to-build-digital-asset-trading-settlement-and-custody-service"
html <- read_html(url)
url <- https://www.finextra.com/newsarticle/32360/moneybox-adds-14m-to-coffers
url <- "https://www.finextra.com/newsarticle/32360/moneybox-adds-14m-to-coffers"
html <- read_html(url)
html_nodes(html, "#twitterResult,#fbResult")
nodes <- html_nodes(html, "#twitterResult,#fbResult")
html_text(nodes)
nodes <- html_nodes(html, "#twitterResult,#liResult,#fbResult,#reResult,#goResult,#emResult")
html_text(nodes)
source('~/GitHub/Skaizen/WebCrawler.R')
nodes <- html_nodes(html, ".left.fullWidth,#twitterResult,#liResult,#fbResult,#reResult,#goResult,#emResult,")
nodes <- html_nodes(html, "#twitterResult,#liResult,#fbResult,#reResult,#goResult,#emResult,")
nodes <- html_nodes(html, ".left.fullWidth,#twitterResult,#liResult,#fbResult,#reResult,#goResult,#emResult,")
nodes <- html_nodes(html, ".left.fullWidth,#twitterResult,#liResult,#fbResult,#reResult,#goResult,#emResult")
html_text(nodes)
nodes <- html_nodes(html, "#twitterResult,#liResult,#fbResult,#reResult,#goResult,#emResult,.left.fullWidth,.ncMetaDataSnippet")
html_text(nodes)
text <- html_text(nodes)
text[5]
text[7]
text[8:]
text[8:-1]
text[8,]
text[8:]
text[8,length(text)]
text[8:length(text)]
paste(text[8:lengt(text)], sep = ",")
paste(text[8:length(text)], sep = ",")
paste(text[8:length(text)], collapse = ",")
