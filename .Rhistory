tmp <- links
for (j in seq.int(length(links))) {
link <- links[j][[1]]
if (!(link %in% scannedLinks)) {
pageLinks <- LinkExtractor(link)[[2]]
pageLinks <- c(lapply(pageLinks, function (x) {
if (startsWith(x, path)) {
x
}
}))
pageLinks <- pageLinks[!sapply(pageLinks, is.null)]
tmp <- c(tmp, pageLinks)
scannedLinks <- c(scannedLinks, link)
}
}
links <- unique(tmp)
}
if (!startsWith(url, path)) {
links[1] <- NULL
}
links <- lapply(links, function(x) as.character(x))
links
}
parser <- function(links, limit = 0, step = 1) {
df <- data.frame(url = unlist(links))
df$title <- unlist(list(NA))
df$postTags <- unlist(list(NA))
df$views <- unlist(list(NA))
df$comments <- unlist(list(NA))
df$time <- unlist(list(NA))
if (limit == 0) {
l <- length(links)
} else {
l <- limit
}
time <- Sys.time()
for(i in seq.int(l)) {
if (i %% step == 0) {
progress_bar <- paste(c("[", lapply(seq.int(25), function(x, progress) {
if (x <= progress) {
"#"
} else {
" "
}
}, round(i/l*25)), "] "), sep = "", collapse = "")
stepindicator <- sprintf("%s/%s", i, l, sep = ",")
print(paste(c( progress_bar, stepindicator), sep = "", collapse = ""))
}
link <- links[[i]]
html <- read_html(link)
#Title
title_node <- html_node(html, titleSelector)
df$title[i] <- html_text(title_node)
#Tags
tags_nodes <- html_nodes(html, tagSelector)
if (length(tags_nodes) > 0) {
tags <- paste(lapply(tags_nodes, function(x) html_text(x)), collapse = ",")
df$postTags[i] <- tags
}
stats_node <- html_node(html, statsSelector)
text <- html_text(stats_node)
text <- stripWhitespace(text)
splitText <- unlist(strsplit(text, "[[:space:]]"))
len <- length(splitText)
df$text[i] <- text
#Views
df$views[i] <- as.integer(splitText[len-3])
#Comments
df$comments[i] <- as.integer(splitText[len])
# #Time
# timestamp <- as.integer(Sys.time())
# if (splitText[2] == "hours") {
#   hours <- as.integer(splitText[1])
#   postTime <- time - hours * 3600
#   df$time[i] <- as.integer(postTime)
# } else {
#   year <- splitText[3]
#   month <- splitText[2]
#   day <- splitText[1]
#   date <- ISOdate(year, month, day)
#   print(date)
#   df$time[i] <- as.integer(date)
# }
}
df$tags <- unlist(df$tags)
df$url <- unlist(df$url)
df$title <- unlist(df$title)
df$views <- unlist(df$views)
df$comments <- unlist(df$comments)
df$time <- unlist(df$time)
df <- subset(df, !is.na(title))
df$id <- seq.int(length(df$url))
df
}
sdate1 <- "6aug2005"
as.Date(sdate1, "%d%B%Y")
install.packages("datetimeutils")
library(datetimeutils)
as.Date(sdate1, "%d%B%Y")
install.packages("datetime")
as.Date(sdate1, "%d%B%Y")
c("Jan", "Fev", "Mar")
which(c == "Jan")
which(c, value == "Jan")
vec <- c("Jan", "Fev", "Mar")
which(vec == "Jan")
which(vec == "Fev")
source('~/GitHub/Skaizen/WebCrawler.R')
months <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
crawler(3, url, "https://www.finextra.com/newsarticle")
spintf("%s/%S", "1", "2")
sprintf("%s/%S", "1", "2")
sprintf("%s/%s", "1", "2")
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
crawler(3, url, "https://www.finextra.com/newsarticle")
source('~/GitHub/Skaizen/WebCrawler.R')
crawler(3, url, "https://www.finextra.com/newsarticle")
source('~/GitHub/Skaizen/WebCrawler.R')
crawler(3, url, "https://www.finextra.com/newsarticle")
crawler(3, url, "https://www.finextra.com/newsarticle")
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
crawler(3, url, "https://www.finextra.com/newsarticle")
if (!startsWith(url, path)) {
links[1] <- NULL
}
links <- lapply(links, function(x) as.character(x))
links
View(links)
crawler(2, url, "https://www.finextra.com/newsarticle")
View(links)
links <- $crawler(2, url, "https://www.finextra.com/newsarticle")
links <- crawler(2, url, "https://www.finextra.com/newsarticle")
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 100, 5)
library(Rcrawler)
library(rvest)
library(tm)
df <- parser(links, 100, 5)
df <- parser(links, 100, 5)
debugSource('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 100, 5)
df <- parser(links, 100, 5)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 100, 5)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 100, 5)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 100, 5)
View(df)
df <- df[order(df, time),]
df <- df[order(df, df$time),]
df <- df[,order(df, df$time)]
df <- df[,order(df$time)]
df <- df[order(df$time),]
View(df)
now <- as.integer(Sys.time())
df$popularity <- df$views / (now - df$time)
tags <- c()
for (i in df$id) {
tags <- unique(c(tags, unlist(strsplit(df$tags[i], ","))))
}
#Calculating total popularity
tags$total_pop <- list(0)
for (i in seq.int(length(tags))) {
for (j in df$id) {
if (tags$tag[i] %in% strsplit(df$postTags[j])) {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
View(df)
#Calculating total popularity
tags$total_pop <- unlist(list(0))
for (i in seq.int(length(tags))) {
for (j in df$id) {
if (tags$tag[i] %in% strsplit(df$postTags[j])) {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
strsplit("1,2,3", ",")
df$postTags[4]
#Calculating total popularity
tags$total_pop <- unlist(list(0))
for (i in seq.int(length(tags))) {
for (j in df$id) {
if (tags$tag[i] %in% strsplit(df$postTags[j]), ",") {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
#Calculating total popularity
tags$total_pop <- unlist(list(0))
for (i in seq.int(length(tags))) {
for (j in df$id) {
if (tags$tag[i] %in% strsplit(df$postTags[j], ",")) {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
#Calculating total popularity
tags$total_pop <- unlist(list(0))
for (i in seq.int(length(tags))) {
for (j in df$id) {
if (tags$tag[i] %in% strsplit(df$postTags[j], ",")) {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
#Calculating total popularity
tags$total_pop <- unlist(list(0))
for (i in seq.int(length(tags))) {
for (j in df$id) {
if (tags$tag[i] %in% strsplit(df$postTags[j], ",")) {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
#Calculating total popularity
tags$total_pop <- unlist(list(0))
for (i in seq.int(length(tags))) {
for (j in df$id) {
if (tags$tag[i] %in% strsplit(df$postTags[j], ",")) {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
#Calculating total popularity
tags$total_pop <- unlist(list(0))
for (i in seq.int(length(tags))) {
for (j in df$id) {
if (tags$tag[i] %in% strsplit(df$postTags[j], ",")) {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
tags$total_pop <- unlist(list(0))
for (i in seq.int(length(tags))) {
for (j in df$id) {
if (length(df$postTags[j]) > 0 && tags$tag[i] %in% strsplit(df$postTags[j], ",")) {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
#Calculating total popularity
tags$total_pop <- unlist(list(0))
for (i in seq.int(length(tags))) {
for (j in df$id) {
postTags <- df$postTags[j]
print(postTags)
if (tags$tag[i] %in% strsplit(postTags, ",")) {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
tags$tag[i]
tags <- c()
for (i in df$id) {
tags <- unique(c(tags, unlist(strsplit(df$tags[i], ","))))
}
View(df)
tags <- c()
for (i in df$id) {
tags <- unique(c(tags, unlist(strsplit(df$postTags[i], ","))))
}
tags <- c()
for (i in df$id) {
tags <- unique(c(tags, unlist(strsplit(df$postTags[i], ","))))
}
tags <- data.frame(tag = tags)
#Calculating total popularity
tags$total_pop <- unlist(list(0))
for (i in seq.int(length(tags))) {
for (j in df$id) {
postTags <- df$postTags[j]
print(postTags)
if (tags$tag[i] %in% strsplit(postTags, ",")) {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
#Calculating total popularity
tags$total_pop <- unlist(list(0))
for (i in seq.int(length(tags))) {
for (j in df$id) {
if (tags$tag[i] %in% strsplit(df$postTags[j], ",")) {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
tags$occurences <- table(unlist(strsplit(df$tags, ",")))
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
View(tags)
#Calculating total popularity
tags$total_pop <- unlist(list(0))
for (i in seq.int(length(tags))) {
for (j in df$id) {
if (tags$tag[i] %in% strsplit(df$postTags[j], ",")) {
tags$total_pop[i] <- tags$total_pop[i] + df$popularity[j]
}
}
}
View(tags)
tags$total_pop[1] <- tags$total_pop[1] + 3
View(tags)
df$popularity[4]
tags$total_pop[2] <- tags$total_pop[2] + df$popularity[4]
View(tags)
tags[tag == "RETAIL BANKING"]
tags[tags$tag == "RETAIL BANKING"]
tags[which(tags$tag == "RETAIL BANKING")]
subset(tags, tag == "RETAIL BAKING")
subset(tags, tag == "RETAIL BANKING")
subset <- subset(tags, tag == "RETAIL BANKING")
tagssubset <- subset(tags, tag == "RETAIL BANKING")
tagsSubset <- subset(tags, tag == "RETAIL BANKING")
tagsSubset$total_pop <- 5
View(tags)
tags[which(tags$tag == "RETAIL BANKING")]
which(tags$tag == "RETAIL BANKING")
tags[1]
tags[[1]
]
tags$tag[1]
tags[1]
tags[[1]]
View(tags)
tags$tag
tags$tag[1]
tags[1]$tag
indexes <- which(tags$tag == "RETAIL BANKING")
tags$total_pop[indexes] <- tags$total_pp[indexes]
tags$total_pop[indexes] <- tags$total_pop[indexes] + 10
View(df)
View(tags)
tags$total_pop[indexes] <- tags$total_pop[indexes] + 10
tags$total_pop[indexes] <- tags$total_pop[indexes] + 10
tags$total_pop[indexes] <- tags$total_pop[indexes] + 10
tags$total_pop[indexes] <- tags$total_pop[indexes] + 10
now <- as.integer(Sys.time())
df$popularity <- df$views / (now - df$time)
df <- df[order(df$id),]
tags <- c()
for (i in df$id) {
tags <- unique(c(tags, unlist(strsplit(df$postTags[i], ","))))
}
tags <- data.frame(tag = tags)
View(tags)
tags$popularity <- unlist(list(0))
df <- df[order(df$id),]
tags$popularity <- unlist(list(0))
for (i in df$id) {
for (postTag in strslit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)[1]
tags$total_pop <- tags$total_pop + df$popularity[i]
}
}
df <- df[order(df$id),]
tags$popularity <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)[1]
tags$total_pop <- tags$total_pop + df$popularity[i]
}
}
df <- df[order(df$id),]
tags$popularity <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)[1]
tags$total_pop <- tags$total_pop + df$popularity[i]
}
}
debugSource('~/GitHub/Skaizen/Popularity.R')
debugSource('~/GitHub/Skaizen/Popularity.R')
df$tags[6]
View(df)
debugSource('~/GitHub/Skaizen/Popularity.R')
debugSource('~/GitHub/Skaizen/Popularity.R')
debugSource('~/GitHub/Skaizen/Popularity.R')
warnings()
debugSource('~/GitHub/Skaizen/Popularity.R')
df <- df[order(df$id),]
tags$popularity <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)[1]
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
warnings()
which(tags$tag == postTag)
which(tags$tag == "RETAIL BANKING")
which(tags$tag == "RETAIL BANKING")[1]
which(tags$tag == "RETAIL BANKING")[[1]]
debugSource('~/GitHub/Skaizen/Popularity.R')
df <- df[order(df$id),]
tags$popularity <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
View(tags)
now <- as.integer(Sys.time())
now
df$time[1]
df$popularity <- df$views / (now - df$time)
View(df)
df$views/2
now - df$time[2]
source('~/GitHub/Skaizen/Popularity.R')
df$popularity <- df$views / (now - df$time) * 1000
View(df)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 100, 5)
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 100, 5)
alarm()
alarm()
alarm()
\a
"\a"
print("\a")
function Alarm() {
library(sound)
setWavPlayer('"C:\\Program Files\\Windows Media Player\\wmplayer.exe" /play /close ')
s <- Sine(440,1)
play(s)
}
install.packages("sound")
function Alarm() {
library(sound)
setWavPlayer('"C:\\Program Files\\Windows Media Player\\wmplayer.exe" /play /close ')
s <- Sine(440,1)
play(s)
}
alarm <- function() {
library(sound)
setWavPlayer('"C:\\Program Files\\Windows Media Player\\wmplayer.exe" /play /close ')
s <- Sine(440,1)
play(s)
}
alarm()
install.packages("beepr")
install.packages("beepr")
library(beepr)
beep()
source('~/GitHub/Skaizen/WebCrawler.R')
source('~/GitHub/Skaizen/WebCrawler.R')
df <- parser(links, 100, 5)
beep()
source('~/GitHub/Skaizen/WebCrawler.R')
View(df)
df$popularity <- df$views / (now - df$time) * 1000
df <- df[order(df$id),]
tags$popularity <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
View(tags)
index <- which(tags$tag == "RETAIL BANKING")
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
tags$total_pop[index] + df$popularity[i]
tags$total_pop
View(tags)
source('~/GitHub/Skaizen/Popularity.R')
now <- as.integer(Sys.time())
df$popularity <- df$views / (now - df$time) * 1000
df <- df[order(df$id),]
tags <- c()
for (i in df$id) {
tags <- unique(c(tags, unlist(strsplit(df$postTags[i], ","))))
}
tags <- data.frame(tag = tags)
df <- df[order(df$id),]
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
tags$avg_pop <- tags$total_pop/tags$occurences
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
df <- df[order(df$id),]
tags$total_pop <- unlist(list(0))
for (i in df$id) {
for (postTag in strsplit(df$postTags[i], ",")) {
index <- which(tags$tag == postTag)
tags$total_pop[index] <- tags$total_pop[index] + df$popularity[i]
}
}
tags$avg_pop <- tags$total_pop/tags$occurences
tags$occurences <- table(unlist(strsplit(df$postTags, ",")))
View(tags)
tags <- tags[order(tags$avg_pop)]
tags$avg_pop
order(tags$avg_pop)
tags <- tags[order(tags$avg_pop)]
tags <- tags[order(tags$avg_pop),]
View(tags)
source('~/GitHub/Skaizen/Popularity.R')
